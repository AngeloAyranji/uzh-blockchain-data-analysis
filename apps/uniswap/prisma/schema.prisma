generator client {
  provider      = "prisma-client-js"
  output        = "../../../node_modules/@prisma/client-uniswap"
  binaryTargets = ["native", "linux-musl"]
}

// TODO: this should be from env
datasource db {
  provider = "postgresql"
  url      = "postgresql://user:postgres@localhost:13339/uniswap"
}

model Factory {
  id                   String   @id
  address              String
  version              Version
  swapSignature        String
  poolCreatedSignature String
  mintSignature String
  burnSignature String
  chainId              Int
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  poolAddress          Pool[]

  @@unique([chainId, version], name: "unique_chain_id_version")
  @@unique([chainId, address], name: "unique_chain_id_address")
}

model Pool {
  id             String   @id
  poolAddress    String   
  factory        Factory  @relation(fields: [factoryId], references: [id])
  factoryId      String
  token0         String
  token1         String
  deployedAt     DateTime @db.Timestamptz()
  swaps          Swap[]

  @@unique([poolAddress, factoryId], name: "unique_pool_address_factory_id")
}

model Swap {
  id              String
  pool            Pool     @relation(fields: [poolId], references: [id])
  poolId          String
  transactionHash String
  sender          String
  recipient       String
  amountIn        String
  amountOut       String
  reversed        Boolean
  price           String?
  swapAt          DateTime @db.Timestamptz()
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  @@unique([id, swapAt])
}

enum Version {
  V2
  V3
}
