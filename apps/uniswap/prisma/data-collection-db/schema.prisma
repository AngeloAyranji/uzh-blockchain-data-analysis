generator client {
  provider      = "prisma-client-js"
  output        = "../../..node_modules/@prisma/client-collection"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATA_COLLECTION_DATABASE_URL")
}

model Block {
  block_number BigInt        @id
  block_hash   String?
  nonce        String?
  difficulty   Decimal
  gas_limit    BigInt
  gas_used     BigInt
  timestamp    DateTime
  miner        String?
  parent_hash  String?
  block_reward Decimal
  uncles       String[]
  updated_at   DateTime      @updatedAt
  transactions Transaction[]
}

model Transaction {
  transaction_hash String   @id
  block_number     BigInt
  block            Block    @relation(fields: [block_number], references: [block_number])
  from_address     String
  to_address       String
  value            Decimal
  transaction_fee  Decimal
  gas_price        Decimal
  gas_limit        Decimal
  gas_used         Decimal
  is_token_tx      Boolean
  input_data       String
  updated_at       DateTime @updatedAt

  internalTransactions InternalTransaction[]
  transactionLogs      TransactionLog[]
}

model InternalTransaction {
  transaction_hash String      @id
  transaction      Transaction @relation(fields: [transaction_hash], references: [transaction_hash])
  from_address     String
  to_address       String
  value            Decimal
  gas_limit        BigInt
  gas_used         BigInt
  input_data       String
  call_type        String
  updated_at       DateTime    @updatedAt
}

model TransactionLog {
  transaction_hash String
  transaction      Transaction @relation(fields: [transaction_hash], references: [transaction_hash])
  address          String
  log_index        Int
  data             String
  removed          Boolean
  topic_0          String
  topics           String[]
  updated_at       DateTime    @updatedAt

  @@id([transaction_hash, log_index])
}
