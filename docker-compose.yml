version: '3.7'
services:
  # uniswap:
  #   extends:
  #     file: docker-compose.base.yml
  #     service: uzh-blockchain-data-analysis-base
  #   command: npm run uniswap:dev
  #   ports:
  #     - '4000:4000'
  #   depends_on:
  #     - collection-db
  #     - analysis-db
  #   env_file:
  #     - ./apps/uniswap/.env
    # profiles: ["uniswap", "all"]
  
  collection-db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    # user: "${DATA_UID}:${DATA_GID}"
    # group_add:
    #   - ${DATA_GID}
    ports:
      - "${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}"
    env_file:
      - .env
    volumes:
      - ${DATA_DIR}:/var/lib/postgresql/data
  
  analysis-db:
    image: timescale/timescaledb-ha:pg16
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_ANALYSIS_USER}
      POSTGRES_PASSWORD: ${POSTGRES_ANALYSIS_PASSWORD}
      POSTGRES_DB: ${POSTGRES_ANALYSIS_DB}
    # user: "${DATA_UID}:${DATA_GID}"
    # group_add:
    #   - ${DATA_GID}
    ports:
      - "${POSTGRES_ANALYSIS_HOST_PORT}:${POSTGRES_ANALYSIS_CONTAINER_PORT}"
    env_file:
      - .env
    volumes:
      - ${ANALYSIS_DATA_DIR}:/var/lib/postgresql/data
  
  redis:
    image: redis
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - ${REDIS_DATA_DIR}:/var/lib/redis/data

volumes:
  uzh-blockchain-data-analysis-node-modules: null
  nx-cache: null