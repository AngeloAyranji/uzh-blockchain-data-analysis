version: '3.7'

services:
  uniswap:
    restart: always
    build:
      context: .
      dockerfile: apps/uniswap/Dockerfile
    ports:
      - '4000:4000'
    command: npm run uniswap:docker
    depends_on:
      - collection-db
      - analysis-db
      - redis
    environment:
      - DEV_PLATFORM=DOCKER
    volumes:
      - ./:/app
      - mono-node-modules:/app/node_modules

  dashboard:
    restart: always
    build:
      context: .
      dockerfile: apps/dashboard/Dockerfile
    ports:
      - '4200:4200'
    command: npm run dashboard:docker
    depends_on:
      - collection-db
      - analysis-db
      - redis
    environment:
      - DEV_PLATFORM=DOCKER

  collection-db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    user: "${DATA_UID}:${DATA_GID}"
    group_add:
      - ${DATA_GID}
    ports:
      - "${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}"
    env_file:
      - .env
    volumes:
      - ${DATA_DIR}:/var/lib/postgresql/data
  
  analysis-db:
    image: timescale/timescaledb:2.15.3-pg16
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_ANALYSIS_USER}
      POSTGRES_PASSWORD: ${POSTGRES_ANALYSIS_PASSWORD}
      POSTGRES_DB: ${POSTGRES_ANALYSIS_DB}
    user: "${DATA_UID}:${DATA_GID}"
    group_add:
      - ${DATA_GID}
    ports:
      - "${POSTGRES_ANALYSIS_HOST_PORT}:${POSTGRES_ANALYSIS_CONTAINER_PORT}"
    env_file:
      - .env
    volumes:
      - ${ANALYSIS_DATA_DIR}:/var/lib/postgresql/data
  
  redis:
    image: redis
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - ${REDIS_DATA_DIR}:/var/lib/redis/data

volumes:
  mono-node-modules: